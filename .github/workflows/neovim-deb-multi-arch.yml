name: Build Neovim .deb Package (multi-arch)

on:
  workflow_dispatch:
    inputs:
      arch:
        description: "Target architecture"
        required: true
        default: "amd64"
        type: choice
        options:
          - amd64
          - aarch64

env:
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build gettext cmake unzip curl \
              build-essential binutils lintian debhelper dh-make devscripts \
              gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Checkout Neovim
        run: |
          git clone https://github.com/neovim/neovim
          cd neovim && git checkout stable

      - name: Create aarch64 CMake toolchain file
        if: ${{ github.event.inputs.arch == 'aarch64' }}
        run: |
          cat <<EOF > aarch64-toolchain.cmake
          set(CMAKE_SYSTEM_NAME Linux)
          set(CMAKE_SYSTEM_PROCESSOR aarch64)
          set(CMAKE_C_COMPILER aarch64-linux-gnu-gcc)
          set(CMAKE_CXX_COMPILER aarch64-linux-gnu-g++)
          set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
          set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
          set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
          EOF

      - name: Build Neovim
        id: build
        run: |
          cd neovim
          mkdir -p build

          if [[ "${{ github.event.inputs.arch }}" == "aarch64" ]]; then
            cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=../aarch64-toolchain.cmake
          else
            cmake -Bbuild -DCMAKE_BUILD_TYPE=Release
          fi

          cmake --build build

          cd build
          arch=${{ github.event.inputs.arch }}
          cpack -G DEB -D CPACK_DEBIAN_PACKAGE_ARCHITECTURE=$arch \
                -D CPACK_PACKAGE_FILE_NAME="nvim-stable-linux-$arch"

          deb_file=$(realpath nvim-stable-linux-$arch.deb)
          echo "deb_file=$deb_file" >> $GITHUB_OUTPUT

      - name: Extract version
        id: version
        run: |
          version=$(cd neovim && git describe --tags --abbrev=0)
          echo "version_number=${version#v}" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nvim-v${{ steps.version.outputs.version_number }}-stable-linux-${{ github.event.inputs.arch }}
          name: nvim-v${{ steps.version.outputs.version_number }}-stable-linux-${{ github.event.inputs.arch }}
          body: |
            NVIM v${{ steps.version.outputs.version_number }}
            Build type: Release
            Architecture: ${{ github.event.inputs.arch }}
          files: ${{ steps.build.outputs.deb_file }}
